= to_xls plugin

This Rails plugin is the easiest way to export to Excel. It gives you the ability to call to_xls to an Array of Hashes. The builder options are the same as to_json / to_xml, except for the :include, :except, and :only.  Additionally, there is a :upcase option which allows you to change your columns to upper case.  Since you make the Hash, you can add whatever you want in the values or columns, name the columns whatever you want.  Why?  Because often you have data tables you want to export that are made up of modified and joined data from other tables when you display them, why not export that same modified data set?  Also, since the columns read hash names and humanize the values, you can make column names that are more readable, like ":first_name" and will display like:  "First name" or "FIRST NAME" (with :upcase option).

== Usage
  @users = User.all
	a = Array.new
	@users.each do |u|
		h = Hash.new
		h[:name] 		= u.name 				#name is a method in the model that combines table columns: first_name, last_name
		h[:studio] 	= u.studio.name #studio is an associated record, the studio to which this user belongs, adds the name of the studio
		# add calculated hours, make up your own columns
		u.hours_this_week.each do |hours|
			h[hours.day_hours_occured.to_sym] = hours.number_of_hours
		end
		a << h
	end
	
  #
  # defaults are export headers and all fields
	# (:only and :except options are not used since you include exactly what you want)
  #

  a.to_xls
  a.to_xls(:headers => false)
  a.to_xls(:upcase => true)
== Options

	options[:columns]	- include as an Array if you want to enforce the order of columns, otherwise will be random since it'll get the columns from a Hash. These need to be the same as your Hash keys or the values won't come through
	options[:headers]	- whether or not to include headers
	options[:upcase]	- whether or not to upcase the column headers


== Real life example
	
In config/initializers/mime_types.rb register the custom mime type.

	Mime::Type.register "application/vnd.ms-excel", :xls	
	
	
In the controller where you want to export to excel, add the format.xls line.

class UserController < ApplicationController

        def index
            @users = User.all

            respond_to do |format|
                format.html
                format.xml { render :xml => @users }
                format.xls { 
                a = Array.new
                columns = Array.new
                @users.each do |u|
                    h = Hash.new
                    h[:name] 		= u.name 				#name is a method in the model that combines table columns: first_name, last_name
                    h[:studio] 	= u.studio.name #studio is an associated record, the studio to which this user belongs, adds the name of the studio
                    columns = [:name, :studio]
                    # add calculated hours, make up your own columns
                    u.hours_this_week.each do |hours|
                        h[hours.day_hours_occured.to_sym] = hours.number_of_hours
                        columns << hours.day_hours_occured.to_sym
                    end
                    a << h
                end
                send_data a.to_xls(:upcase => true, :columns => columns)
                }
            end
        end

        def show...
        def new...
        def edit...
        def create...
        def update...
        def destroy...

end

== Dependencies

None.


== Install

	./script/plugin install git://github.com/richardun/to_xls.git


== Note

Must pass in an Array with Hash elements

Copyright Â© 2009 Richard Navarrete, released under the MIT license Based on 

Copyright (c) 2009 Ary Djmal, released under the MIT license